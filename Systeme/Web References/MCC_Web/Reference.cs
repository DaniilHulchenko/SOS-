//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18408
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace SosMedecins.SmartRapport.Systeme.MCC_Web {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSRecup_040Soap", Namespace="http://tempuri.org/")]
    public partial class WSRecup_040 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthentificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppelsTerminesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConsultationsLibresTermineesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppelsTerminesBetweenTwoIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConsultationsTermineesBetweenTwoIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientByTelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotaliteIndexAppelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListeMedecinsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppelByNumeroOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppelEnConsultationLibreByNumeroOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEcgOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRemToPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveRemToPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback HistoriqueStatutMedecinOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSRecup_040() {
            this.Url = global::SosMedecins.SmartRapport.Systeme.Properties.Settings.Default.SosMedecins_SmartRapport_Systeme_MCC_Web_WSRecup_040;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AuthentificationCompletedEventHandler AuthentificationCompleted;
        
        /// <remarks/>
        public event GetAppelsTerminesCompletedEventHandler GetAppelsTerminesCompleted;
        
        /// <remarks/>
        public event GetConsultationsLibresTermineesCompletedEventHandler GetConsultationsLibresTermineesCompleted;
        
        /// <remarks/>
        public event GetAppelsTerminesBetweenTwoIndexCompletedEventHandler GetAppelsTerminesBetweenTwoIndexCompleted;
        
        /// <remarks/>
        public event GetConsultationsTermineesBetweenTwoIndexCompletedEventHandler GetConsultationsTermineesBetweenTwoIndexCompleted;
        
        /// <remarks/>
        public event GetPatientByTelCompletedEventHandler GetPatientByTelCompleted;
        
        /// <remarks/>
        public event GetTotaliteIndexAppelsCompletedEventHandler GetTotaliteIndexAppelsCompleted;
        
        /// <remarks/>
        public event GetListeMedecinsCompletedEventHandler GetListeMedecinsCompleted;
        
        /// <remarks/>
        public event GetAppelByNumeroCompletedEventHandler GetAppelByNumeroCompleted;
        
        /// <remarks/>
        public event GetAppelEnConsultationLibreByNumeroCompletedEventHandler GetAppelEnConsultationLibreByNumeroCompleted;
        
        /// <remarks/>
        public event GetEcgCompletedEventHandler GetEcgCompleted;
        
        /// <remarks/>
        public event CreatePatientCompletedEventHandler CreatePatientCompleted;
        
        /// <remarks/>
        public event UpdatePatientCompletedEventHandler UpdatePatientCompleted;
        
        /// <remarks/>
        public event AddRemToPatientCompletedEventHandler AddRemToPatientCompleted;
        
        /// <remarks/>
        public event RemoveRemToPatientCompletedEventHandler RemoveRemToPatientCompleted;
        
        /// <remarks/>
        public event HistoriqueStatutMedecinCompletedEventHandler HistoriqueStatutMedecinCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Authentification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Authentification(string login, string password) {
            object[] results = this.Invoke("Authentification", new object[] {
                        login,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AuthentificationAsync(string login, string password) {
            this.AuthentificationAsync(login, password, null);
        }
        
        /// <remarks/>
        public void AuthentificationAsync(string login, string password, object userState) {
            if ((this.AuthentificationOperationCompleted == null)) {
                this.AuthentificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthentificationOperationCompleted);
            }
            this.InvokeAsync("Authentification", new object[] {
                        login,
                        password}, this.AuthentificationOperationCompleted, userState);
        }
        
        private void OnAuthentificationOperationCompleted(object arg) {
            if ((this.AuthentificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthentificationCompleted(this, new AuthentificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppelsTermines", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppelsTermines(long Num, int CodeService, bool AvecFacture) {
            object[] results = this.Invoke("GetAppelsTermines", new object[] {
                        Num,
                        CodeService,
                        AvecFacture});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppelsTerminesAsync(long Num, int CodeService, bool AvecFacture) {
            this.GetAppelsTerminesAsync(Num, CodeService, AvecFacture, null);
        }
        
        /// <remarks/>
        public void GetAppelsTerminesAsync(long Num, int CodeService, bool AvecFacture, object userState) {
            if ((this.GetAppelsTerminesOperationCompleted == null)) {
                this.GetAppelsTerminesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppelsTerminesOperationCompleted);
            }
            this.InvokeAsync("GetAppelsTermines", new object[] {
                        Num,
                        CodeService,
                        AvecFacture}, this.GetAppelsTerminesOperationCompleted, userState);
        }
        
        private void OnGetAppelsTerminesOperationCompleted(object arg) {
            if ((this.GetAppelsTerminesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppelsTerminesCompleted(this, new GetAppelsTerminesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConsultationsLibresTerminees", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConsultationsLibresTerminees(long Num, int CodeService) {
            object[] results = this.Invoke("GetConsultationsLibresTerminees", new object[] {
                        Num,
                        CodeService});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetConsultationsLibresTermineesAsync(long Num, int CodeService) {
            this.GetConsultationsLibresTermineesAsync(Num, CodeService, null);
        }
        
        /// <remarks/>
        public void GetConsultationsLibresTermineesAsync(long Num, int CodeService, object userState) {
            if ((this.GetConsultationsLibresTermineesOperationCompleted == null)) {
                this.GetConsultationsLibresTermineesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConsultationsLibresTermineesOperationCompleted);
            }
            this.InvokeAsync("GetConsultationsLibresTerminees", new object[] {
                        Num,
                        CodeService}, this.GetConsultationsLibresTermineesOperationCompleted, userState);
        }
        
        private void OnGetConsultationsLibresTermineesOperationCompleted(object arg) {
            if ((this.GetConsultationsLibresTermineesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConsultationsLibresTermineesCompleted(this, new GetConsultationsLibresTermineesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppelsTerminesBetweenTwoIndex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppelsTerminesBetweenTwoIndex(long Num1, long Num2, int CodeService, bool AvecFacture) {
            object[] results = this.Invoke("GetAppelsTerminesBetweenTwoIndex", new object[] {
                        Num1,
                        Num2,
                        CodeService,
                        AvecFacture});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppelsTerminesBetweenTwoIndexAsync(long Num1, long Num2, int CodeService, bool AvecFacture) {
            this.GetAppelsTerminesBetweenTwoIndexAsync(Num1, Num2, CodeService, AvecFacture, null);
        }
        
        /// <remarks/>
        public void GetAppelsTerminesBetweenTwoIndexAsync(long Num1, long Num2, int CodeService, bool AvecFacture, object userState) {
            if ((this.GetAppelsTerminesBetweenTwoIndexOperationCompleted == null)) {
                this.GetAppelsTerminesBetweenTwoIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppelsTerminesBetweenTwoIndexOperationCompleted);
            }
            this.InvokeAsync("GetAppelsTerminesBetweenTwoIndex", new object[] {
                        Num1,
                        Num2,
                        CodeService,
                        AvecFacture}, this.GetAppelsTerminesBetweenTwoIndexOperationCompleted, userState);
        }
        
        private void OnGetAppelsTerminesBetweenTwoIndexOperationCompleted(object arg) {
            if ((this.GetAppelsTerminesBetweenTwoIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppelsTerminesBetweenTwoIndexCompleted(this, new GetAppelsTerminesBetweenTwoIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConsultationsTermineesBetweenTwoIndex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConsultationsTermineesBetweenTwoIndex(long Num1, long Num2, int CodeService) {
            object[] results = this.Invoke("GetConsultationsTermineesBetweenTwoIndex", new object[] {
                        Num1,
                        Num2,
                        CodeService});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetConsultationsTermineesBetweenTwoIndexAsync(long Num1, long Num2, int CodeService) {
            this.GetConsultationsTermineesBetweenTwoIndexAsync(Num1, Num2, CodeService, null);
        }
        
        /// <remarks/>
        public void GetConsultationsTermineesBetweenTwoIndexAsync(long Num1, long Num2, int CodeService, object userState) {
            if ((this.GetConsultationsTermineesBetweenTwoIndexOperationCompleted == null)) {
                this.GetConsultationsTermineesBetweenTwoIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConsultationsTermineesBetweenTwoIndexOperationCompleted);
            }
            this.InvokeAsync("GetConsultationsTermineesBetweenTwoIndex", new object[] {
                        Num1,
                        Num2,
                        CodeService}, this.GetConsultationsTermineesBetweenTwoIndexOperationCompleted, userState);
        }
        
        private void OnGetConsultationsTermineesBetweenTwoIndexOperationCompleted(object arg) {
            if ((this.GetConsultationsTermineesBetweenTwoIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConsultationsTermineesBetweenTwoIndexCompleted(this, new GetConsultationsTermineesBetweenTwoIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientByTel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatientByTel(int Service, string Tel) {
            object[] results = this.Invoke("GetPatientByTel", new object[] {
                        Service,
                        Tel});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientByTelAsync(int Service, string Tel) {
            this.GetPatientByTelAsync(Service, Tel, null);
        }
        
        /// <remarks/>
        public void GetPatientByTelAsync(int Service, string Tel, object userState) {
            if ((this.GetPatientByTelOperationCompleted == null)) {
                this.GetPatientByTelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientByTelOperationCompleted);
            }
            this.InvokeAsync("GetPatientByTel", new object[] {
                        Service,
                        Tel}, this.GetPatientByTelOperationCompleted, userState);
        }
        
        private void OnGetPatientByTelOperationCompleted(object arg) {
            if ((this.GetPatientByTelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientByTelCompleted(this, new GetPatientByTelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTotaliteIndexAppels", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetTotaliteIndexAppels(int CodeService) {
            object[] results = this.Invoke("GetTotaliteIndexAppels", new object[] {
                        CodeService});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTotaliteIndexAppelsAsync(int CodeService) {
            this.GetTotaliteIndexAppelsAsync(CodeService, null);
        }
        
        /// <remarks/>
        public void GetTotaliteIndexAppelsAsync(int CodeService, object userState) {
            if ((this.GetTotaliteIndexAppelsOperationCompleted == null)) {
                this.GetTotaliteIndexAppelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotaliteIndexAppelsOperationCompleted);
            }
            this.InvokeAsync("GetTotaliteIndexAppels", new object[] {
                        CodeService}, this.GetTotaliteIndexAppelsOperationCompleted, userState);
        }
        
        private void OnGetTotaliteIndexAppelsOperationCompleted(object arg) {
            if ((this.GetTotaliteIndexAppelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotaliteIndexAppelsCompleted(this, new GetTotaliteIndexAppelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListeMedecins", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetListeMedecins(int CodeService) {
            object[] results = this.Invoke("GetListeMedecins", new object[] {
                        CodeService});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetListeMedecinsAsync(int CodeService) {
            this.GetListeMedecinsAsync(CodeService, null);
        }
        
        /// <remarks/>
        public void GetListeMedecinsAsync(int CodeService, object userState) {
            if ((this.GetListeMedecinsOperationCompleted == null)) {
                this.GetListeMedecinsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListeMedecinsOperationCompleted);
            }
            this.InvokeAsync("GetListeMedecins", new object[] {
                        CodeService}, this.GetListeMedecinsOperationCompleted, userState);
        }
        
        private void OnGetListeMedecinsOperationCompleted(object arg) {
            if ((this.GetListeMedecinsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListeMedecinsCompleted(this, new GetListeMedecinsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppelByNumero", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppelByNumero(long NumeroIndex, bool AvecFacture) {
            object[] results = this.Invoke("GetAppelByNumero", new object[] {
                        NumeroIndex,
                        AvecFacture});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppelByNumeroAsync(long NumeroIndex, bool AvecFacture) {
            this.GetAppelByNumeroAsync(NumeroIndex, AvecFacture, null);
        }
        
        /// <remarks/>
        public void GetAppelByNumeroAsync(long NumeroIndex, bool AvecFacture, object userState) {
            if ((this.GetAppelByNumeroOperationCompleted == null)) {
                this.GetAppelByNumeroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppelByNumeroOperationCompleted);
            }
            this.InvokeAsync("GetAppelByNumero", new object[] {
                        NumeroIndex,
                        AvecFacture}, this.GetAppelByNumeroOperationCompleted, userState);
        }
        
        private void OnGetAppelByNumeroOperationCompleted(object arg) {
            if ((this.GetAppelByNumeroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppelByNumeroCompleted(this, new GetAppelByNumeroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppelEnConsultationLibreByNumero", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppelEnConsultationLibreByNumero(long NumeroIndex) {
            object[] results = this.Invoke("GetAppelEnConsultationLibreByNumero", new object[] {
                        NumeroIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppelEnConsultationLibreByNumeroAsync(long NumeroIndex) {
            this.GetAppelEnConsultationLibreByNumeroAsync(NumeroIndex, null);
        }
        
        /// <remarks/>
        public void GetAppelEnConsultationLibreByNumeroAsync(long NumeroIndex, object userState) {
            if ((this.GetAppelEnConsultationLibreByNumeroOperationCompleted == null)) {
                this.GetAppelEnConsultationLibreByNumeroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppelEnConsultationLibreByNumeroOperationCompleted);
            }
            this.InvokeAsync("GetAppelEnConsultationLibreByNumero", new object[] {
                        NumeroIndex}, this.GetAppelEnConsultationLibreByNumeroOperationCompleted, userState);
        }
        
        private void OnGetAppelEnConsultationLibreByNumeroOperationCompleted(object arg) {
            if ((this.GetAppelEnConsultationLibreByNumeroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppelEnConsultationLibreByNumeroCompleted(this, new GetAppelEnConsultationLibreByNumeroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEcg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetEcg(long NConsultation) {
            object[] results = this.Invoke("GetEcg", new object[] {
                        NConsultation});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEcgAsync(long NConsultation) {
            this.GetEcgAsync(NConsultation, null);
        }
        
        /// <remarks/>
        public void GetEcgAsync(long NConsultation, object userState) {
            if ((this.GetEcgOperationCompleted == null)) {
                this.GetEcgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEcgOperationCompleted);
            }
            this.InvokeAsync("GetEcg", new object[] {
                        NConsultation}, this.GetEcgOperationCompleted, userState);
        }
        
        private void OnGetEcgOperationCompleted(object arg) {
            if ((this.GetEcgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEcgCompleted(this, new GetEcgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreatePatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreatePatient(
                    string Nom, 
                    string Prenom, 
                    string Telephone, 
                    System.DateTime DateNaissance, 
                    char Sexe, 
                    string Departement, 
                    string Commune, 
                    string NumeroPostal, 
                    string Rue, 
                    string NumeroDansLaRue, 
                    long Longitude, 
                    long Latitude, 
                    string Batiment, 
                    string Escalier, 
                    string Digicode, 
                    string Etage, 
                    bool Interphone, 
                    string InterNom, 
                    string Porte, 
                    string CommentairePatient) {
            object[] results = this.Invoke("CreatePatient", new object[] {
                        Nom,
                        Prenom,
                        Telephone,
                        DateNaissance,
                        Sexe,
                        Departement,
                        Commune,
                        NumeroPostal,
                        Rue,
                        NumeroDansLaRue,
                        Longitude,
                        Latitude,
                        Batiment,
                        Escalier,
                        Digicode,
                        Etage,
                        Interphone,
                        InterNom,
                        Porte,
                        CommentairePatient});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePatientAsync(
                    string Nom, 
                    string Prenom, 
                    string Telephone, 
                    System.DateTime DateNaissance, 
                    char Sexe, 
                    string Departement, 
                    string Commune, 
                    string NumeroPostal, 
                    string Rue, 
                    string NumeroDansLaRue, 
                    long Longitude, 
                    long Latitude, 
                    string Batiment, 
                    string Escalier, 
                    string Digicode, 
                    string Etage, 
                    bool Interphone, 
                    string InterNom, 
                    string Porte, 
                    string CommentairePatient) {
            this.CreatePatientAsync(Nom, Prenom, Telephone, DateNaissance, Sexe, Departement, Commune, NumeroPostal, Rue, NumeroDansLaRue, Longitude, Latitude, Batiment, Escalier, Digicode, Etage, Interphone, InterNom, Porte, CommentairePatient, null);
        }
        
        /// <remarks/>
        public void CreatePatientAsync(
                    string Nom, 
                    string Prenom, 
                    string Telephone, 
                    System.DateTime DateNaissance, 
                    char Sexe, 
                    string Departement, 
                    string Commune, 
                    string NumeroPostal, 
                    string Rue, 
                    string NumeroDansLaRue, 
                    long Longitude, 
                    long Latitude, 
                    string Batiment, 
                    string Escalier, 
                    string Digicode, 
                    string Etage, 
                    bool Interphone, 
                    string InterNom, 
                    string Porte, 
                    string CommentairePatient, 
                    object userState) {
            if ((this.CreatePatientOperationCompleted == null)) {
                this.CreatePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePatientOperationCompleted);
            }
            this.InvokeAsync("CreatePatient", new object[] {
                        Nom,
                        Prenom,
                        Telephone,
                        DateNaissance,
                        Sexe,
                        Departement,
                        Commune,
                        NumeroPostal,
                        Rue,
                        NumeroDansLaRue,
                        Longitude,
                        Latitude,
                        Batiment,
                        Escalier,
                        Digicode,
                        Etage,
                        Interphone,
                        InterNom,
                        Porte,
                        CommentairePatient}, this.CreatePatientOperationCompleted, userState);
        }
        
        private void OnCreatePatientOperationCompleted(object arg) {
            if ((this.CreatePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePatientCompleted(this, new CreatePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePatient(
                    long IndicePatient, 
                    string Nom, 
                    string Prenom, 
                    string Telephone, 
                    System.DateTime DateNaissance, 
                    string Departement, 
                    string Commune, 
                    string NumeroPostal, 
                    string Rue, 
                    string NumeroDansLaRue, 
                    long Longitude, 
                    long Latitude, 
                    string Batiment, 
                    string Escalier, 
                    string Digicode, 
                    string Etage, 
                    bool Interphone, 
                    string InterNom, 
                    string Porte, 
                    string CommentairePatient) {
            object[] results = this.Invoke("UpdatePatient", new object[] {
                        IndicePatient,
                        Nom,
                        Prenom,
                        Telephone,
                        DateNaissance,
                        Departement,
                        Commune,
                        NumeroPostal,
                        Rue,
                        NumeroDansLaRue,
                        Longitude,
                        Latitude,
                        Batiment,
                        Escalier,
                        Digicode,
                        Etage,
                        Interphone,
                        InterNom,
                        Porte,
                        CommentairePatient});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePatientAsync(
                    long IndicePatient, 
                    string Nom, 
                    string Prenom, 
                    string Telephone, 
                    System.DateTime DateNaissance, 
                    string Departement, 
                    string Commune, 
                    string NumeroPostal, 
                    string Rue, 
                    string NumeroDansLaRue, 
                    long Longitude, 
                    long Latitude, 
                    string Batiment, 
                    string Escalier, 
                    string Digicode, 
                    string Etage, 
                    bool Interphone, 
                    string InterNom, 
                    string Porte, 
                    string CommentairePatient) {
            this.UpdatePatientAsync(IndicePatient, Nom, Prenom, Telephone, DateNaissance, Departement, Commune, NumeroPostal, Rue, NumeroDansLaRue, Longitude, Latitude, Batiment, Escalier, Digicode, Etage, Interphone, InterNom, Porte, CommentairePatient, null);
        }
        
        /// <remarks/>
        public void UpdatePatientAsync(
                    long IndicePatient, 
                    string Nom, 
                    string Prenom, 
                    string Telephone, 
                    System.DateTime DateNaissance, 
                    string Departement, 
                    string Commune, 
                    string NumeroPostal, 
                    string Rue, 
                    string NumeroDansLaRue, 
                    long Longitude, 
                    long Latitude, 
                    string Batiment, 
                    string Escalier, 
                    string Digicode, 
                    string Etage, 
                    bool Interphone, 
                    string InterNom, 
                    string Porte, 
                    string CommentairePatient, 
                    object userState) {
            if ((this.UpdatePatientOperationCompleted == null)) {
                this.UpdatePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePatientOperationCompleted);
            }
            this.InvokeAsync("UpdatePatient", new object[] {
                        IndicePatient,
                        Nom,
                        Prenom,
                        Telephone,
                        DateNaissance,
                        Departement,
                        Commune,
                        NumeroPostal,
                        Rue,
                        NumeroDansLaRue,
                        Longitude,
                        Latitude,
                        Batiment,
                        Escalier,
                        Digicode,
                        Etage,
                        Interphone,
                        InterNom,
                        Porte,
                        CommentairePatient}, this.UpdatePatientOperationCompleted, userState);
        }
        
        private void OnUpdatePatientOperationCompleted(object arg) {
            if ((this.UpdatePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePatientCompleted(this, new UpdatePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRemToPatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddRemToPatient(long IndicePatient, string TypeRemarque, string TexteRemarque, string Departement) {
            object[] results = this.Invoke("AddRemToPatient", new object[] {
                        IndicePatient,
                        TypeRemarque,
                        TexteRemarque,
                        Departement});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddRemToPatientAsync(long IndicePatient, string TypeRemarque, string TexteRemarque, string Departement) {
            this.AddRemToPatientAsync(IndicePatient, TypeRemarque, TexteRemarque, Departement, null);
        }
        
        /// <remarks/>
        public void AddRemToPatientAsync(long IndicePatient, string TypeRemarque, string TexteRemarque, string Departement, object userState) {
            if ((this.AddRemToPatientOperationCompleted == null)) {
                this.AddRemToPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRemToPatientOperationCompleted);
            }
            this.InvokeAsync("AddRemToPatient", new object[] {
                        IndicePatient,
                        TypeRemarque,
                        TexteRemarque,
                        Departement}, this.AddRemToPatientOperationCompleted, userState);
        }
        
        private void OnAddRemToPatientOperationCompleted(object arg) {
            if ((this.AddRemToPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRemToPatientCompleted(this, new AddRemToPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveRemToPatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveRemToPatient(long IndicePatient, string TypeRemarque) {
            object[] results = this.Invoke("RemoveRemToPatient", new object[] {
                        IndicePatient,
                        TypeRemarque});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveRemToPatientAsync(long IndicePatient, string TypeRemarque) {
            this.RemoveRemToPatientAsync(IndicePatient, TypeRemarque, null);
        }
        
        /// <remarks/>
        public void RemoveRemToPatientAsync(long IndicePatient, string TypeRemarque, object userState) {
            if ((this.RemoveRemToPatientOperationCompleted == null)) {
                this.RemoveRemToPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRemToPatientOperationCompleted);
            }
            this.InvokeAsync("RemoveRemToPatient", new object[] {
                        IndicePatient,
                        TypeRemarque}, this.RemoveRemToPatientOperationCompleted, userState);
        }
        
        private void OnRemoveRemToPatientOperationCompleted(object arg) {
            if ((this.RemoveRemToPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveRemToPatientCompleted(this, new RemoveRemToPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HistoriqueStatutMedecin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet HistoriqueStatutMedecin(long IndexDepart) {
            object[] results = this.Invoke("HistoriqueStatutMedecin", new object[] {
                        IndexDepart});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void HistoriqueStatutMedecinAsync(long IndexDepart) {
            this.HistoriqueStatutMedecinAsync(IndexDepart, null);
        }
        
        /// <remarks/>
        public void HistoriqueStatutMedecinAsync(long IndexDepart, object userState) {
            if ((this.HistoriqueStatutMedecinOperationCompleted == null)) {
                this.HistoriqueStatutMedecinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHistoriqueStatutMedecinOperationCompleted);
            }
            this.InvokeAsync("HistoriqueStatutMedecin", new object[] {
                        IndexDepart}, this.HistoriqueStatutMedecinOperationCompleted, userState);
        }
        
        private void OnHistoriqueStatutMedecinOperationCompleted(object arg) {
            if ((this.HistoriqueStatutMedecinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HistoriqueStatutMedecinCompleted(this, new HistoriqueStatutMedecinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AuthentificationCompletedEventHandler(object sender, AuthentificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthentificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthentificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAppelsTerminesCompletedEventHandler(object sender, GetAppelsTerminesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppelsTerminesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppelsTerminesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetConsultationsLibresTermineesCompletedEventHandler(object sender, GetConsultationsLibresTermineesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConsultationsLibresTermineesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConsultationsLibresTermineesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAppelsTerminesBetweenTwoIndexCompletedEventHandler(object sender, GetAppelsTerminesBetweenTwoIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppelsTerminesBetweenTwoIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppelsTerminesBetweenTwoIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetConsultationsTermineesBetweenTwoIndexCompletedEventHandler(object sender, GetConsultationsTermineesBetweenTwoIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConsultationsTermineesBetweenTwoIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConsultationsTermineesBetweenTwoIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPatientByTelCompletedEventHandler(object sender, GetPatientByTelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientByTelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientByTelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTotaliteIndexAppelsCompletedEventHandler(object sender, GetTotaliteIndexAppelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotaliteIndexAppelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotaliteIndexAppelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetListeMedecinsCompletedEventHandler(object sender, GetListeMedecinsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListeMedecinsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListeMedecinsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAppelByNumeroCompletedEventHandler(object sender, GetAppelByNumeroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppelByNumeroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppelByNumeroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAppelEnConsultationLibreByNumeroCompletedEventHandler(object sender, GetAppelEnConsultationLibreByNumeroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppelEnConsultationLibreByNumeroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppelEnConsultationLibreByNumeroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEcgCompletedEventHandler(object sender, GetEcgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEcgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEcgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreatePatientCompletedEventHandler(object sender, CreatePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdatePatientCompletedEventHandler(object sender, UpdatePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddRemToPatientCompletedEventHandler(object sender, AddRemToPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRemToPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRemToPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveRemToPatientCompletedEventHandler(object sender, RemoveRemToPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveRemToPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveRemToPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void HistoriqueStatutMedecinCompletedEventHandler(object sender, HistoriqueStatutMedecinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HistoriqueStatutMedecinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HistoriqueStatutMedecinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591